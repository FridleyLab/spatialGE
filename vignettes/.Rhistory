View(tnbc@misc$listws$sample_117d$neighbours)
class(tnbc@misc$listws$sample_117d$neighbours)
length(tnbc@misc$listws$sample_117d$neighbours)
dim(tnbc)
length(tnbc@misc$listws$sample_117d$weights)
View(tnbc@misc$listws$sample_117d$weights)
View(tnbc@misc$listws$sample_117d$neighbours)
?spdep::knearneigh
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
tnbc
get_gene_meta(tnbc, sthet_only = T)
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
get_gene_meta(tnbc, sthet_only=T)
get_gene_meta(tnbc_1, sthet_only=T)
get_gene_meta(tnbc_2, sthet_only=T)
x=tnbc
genes=c('NDRG1', 'IGKC')
method='moran'
if (is.null(samples)){
samples = names(x@tr_counts)
} else{
if(is.numeric(samples)){
samples = names(x@tr_counts)[samples]
}
}
samples=NULL
# Select sample names if NULL or if number entered
if (is.null(samples)){
samples = names(x@tr_counts)
} else{
if(is.numeric(samples)){
samples = names(x@tr_counts)[samples]
}
}
# Generate combination of sample x gene to for.
combo_tmp = tibble::tibble()
for(i in samples){
# Check if gene names are in the data set
subsetgenes = genes[genes %in% rownames(x@tr_counts[[i]])]
combo_tmp = dplyr::bind_rows(combo_tmp, expand.grid(i, subsetgenes))
# Get genes not present.
notgenes = genes[!(genes %in% rownames(x@tr_counts[[i]]))]
if(!rlang::is_empty(notgenes)){
cat(paste0(paste(notgenes, collapse=', '), ": Not present in the transformed counts for sample ", i), ".\n")
}
rm(subsetgenes, notgenes) # Clean env
# Add columns in gene meta data if not already present
if(!('moran_i' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['moran_i']] = NA
}
if(!('geary_c' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['geary_c']] = NA
}
}
# Perform calculations
if('moran' %in% method){
x = gene_moran_i_knn(x=x, combo=combo_tmp, overwrite=overwrite)
}
combo=combo_tmp
combo=combo_tmp
genes = as.vector(unique(combo[[2]]))
genes
# Check whether or not a list of weights have been created
if(is.null(x@misc[['sthet']][['listws']])){
x@misc[['sthet']][['listws']] = create_listw(x)
}
x@misc[['sthet']][['listws']] = create_listw_from_knn(x)
x@misc[['sthet']][['listws']] = create_listw_from_knn(x)
x@misc[['sthet']][['listws']]$sample_117d
x@misc[['sthet']][['listws']] = create_listw_from_knn(x, ks=1)
x@misc[['sthet']][['listws']]
View(x@misc[['sthet']][['listws']]$sample_117d)
dim(tnbc)
devtools::load_all('../')
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
x=tnbc
genes=c('NDRG1', 'IGKC')
method='moran'
samples=NULL
# Select sample names if NULL or if number entered
if (is.null(samples)){
samples = names(x@tr_counts)
} else{
if(is.numeric(samples)){
samples = names(x@tr_counts)[samples]
}
}
# Generate combination of sample x gene to for.
combo_tmp = tibble::tibble()
for(i in samples){
# Check if gene names are in the data set
subsetgenes = genes[genes %in% rownames(x@tr_counts[[i]])]
combo_tmp = dplyr::bind_rows(combo_tmp, expand.grid(i, subsetgenes))
# Get genes not present.
notgenes = genes[!(genes %in% rownames(x@tr_counts[[i]]))]
if(!rlang::is_empty(notgenes)){
cat(paste0(paste(notgenes, collapse=', '), ": Not present in the transformed counts for sample ", i), ".\n")
}
rm(subsetgenes, notgenes) # Clean env
# Add columns in gene meta data if not already present
if(!('moran_i' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['moran_i']] = NA
}
if(!('geary_c' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['geary_c']] = NA
}
}
combo=combo_tmp
genes = as.vector(unique(combo[[2]]))
# Check whether or not a list of weights have been created
if(is.null(x@misc[['sthet']][['listws']])){
x@misc[['sthet']][['listws']] = create_listw_from_knn(x)
}
x@misc[['sthet']][['listws']]$sample_117d
devtools::load_all('../')
x@misc[['sthet']][['listws']] = create_listw_from_knn(x)
x@misc[['sthet']][['listws']]$sample_117d
devtools::load_all('../')
x@misc[['sthet']][['listws']] = create_listw_from_knn(x)
View(x@misc[['sthet']][['listws']]$sample_117d)
x@misc[["sthet"]][["listws"]]$sample_117d[["weights"]]
devtools::load_all('../')
x@misc[['sthet']][['listws']] = create_listw_from_knn(x, ks=6)
View(x@misc[['sthet']][['listws']]$sample_117d)
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
x=tnbc
genes=c('NDRG1', 'IGKC')
method='moran'
samples=NULL
# Select sample names if NULL or if number entered
if (is.null(samples)){
samples = names(x@tr_counts)
} else{
if(is.numeric(samples)){
samples = names(x@tr_counts)[samples]
}
}
# Generate combination of sample x gene to for.
combo_tmp = tibble::tibble()
for(i in samples){
# Check if gene names are in the data set
subsetgenes = genes[genes %in% rownames(x@tr_counts[[i]])]
combo_tmp = dplyr::bind_rows(combo_tmp, expand.grid(i, subsetgenes))
# Get genes not present.
notgenes = genes[!(genes %in% rownames(x@tr_counts[[i]]))]
if(!rlang::is_empty(notgenes)){
cat(paste0(paste(notgenes, collapse=', '), ": Not present in the transformed counts for sample ", i), ".\n")
}
rm(subsetgenes, notgenes) # Clean env
# Add columns in gene meta data if not already present
if(!('moran_i' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['moran_i']] = NA
}
if(!('geary_c' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['geary_c']] = NA
}
}
combo=combo_tmp
genes = as.vector(unique(combo[[2]]))
# Check whether or not a list of weights have been created
if(is.null(x@misc[['sthet']][['listws']])){
x@misc[['sthet']][['listws']] = create_listw_from_knn(x, ks=6)
}
# Define cores available
cores = count_cores(nrow(combo))
# Loop through combinations of samples x genes
stat_list = parallel::mclapply(seq_along(1:nrow(combo)), function(i_combo){
i = as.vector(unlist(combo[i_combo, 1]))
j = as.vector(unlist(combo[i_combo, 2]))
# Create distance matrix based on the coordinates of each sampled location.
# subj_dists = as.matrix(dist(x@coords[[i]][2:3]))
# subj_dists[subj_dists == 0] = 0.0001
# subj_dists_inv = 1/subj_dists
# diag(subj_dists_inv) = 0
# Extract expression data for a given gene.
gene_expr = x@tr_counts[[i]][j, ]
# Estimate statistic.
stat_est = spdep::moran.test(x=gene_expr, listw=x@misc$listws[[i]])
return(stat_est)
}, mc.cores=cores, mc.preschedule=F)
stat_list
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
tnbc_2 <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
x=tnbc
genes=c('NDRG1', 'IGKC')
method='moran'
samples=NULL
# Select sample names if NULL or if number entered
if (is.null(samples)){
samples = names(x@tr_counts)
} else{
if(is.numeric(samples)){
samples = names(x@tr_counts)[samples]
}
}
# Generate combination of sample x gene to for.
combo_tmp = tibble::tibble()
for(i in samples){
# Check if gene names are in the data set
subsetgenes = genes[genes %in% rownames(x@tr_counts[[i]])]
combo_tmp = dplyr::bind_rows(combo_tmp, expand.grid(i, subsetgenes))
# Get genes not present.
notgenes = genes[!(genes %in% rownames(x@tr_counts[[i]]))]
if(!rlang::is_empty(notgenes)){
cat(paste0(paste(notgenes, collapse=', '), ": Not present in the transformed counts for sample ", i), ".\n")
}
rm(subsetgenes, notgenes) # Clean env
# Add columns in gene meta data if not already present
if(!('moran_i' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['moran_i']] = NA
}
if(!('geary_c' %in% colnames(x@gene_meta[[i]]))){
x@gene_meta[[i]][['geary_c']] = NA
}
}
combo=combo_tmp
genes = as.vector(unique(combo[[2]]))
genes
# Check whether or not a list of weights have been created
if(is.null(x@misc[['sthet']][['listws']])){
x@misc[['sthet']][['listws']] = create_listw(x)
}
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
tnbc_2 <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
get_gene_meta(tnbc_2, sthet_only=T)
get_gene_meta(tnbc_1, sthet_only=T)
View(tnbc_1)
?spdep::knn2nb
?spdep::nb2listw
View(tnbc_2)
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_3(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
tnbc_2 <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
View(tnbc_2)
View(tnbc_1)
View(tnbc_2)
tnbc_2@gene_het
class(tnbc_2@misc$sthet$listws$sample_117d)
i
i=1
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
x=tnbc
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
head(coords_mtx)
adj = as.matrix(dist(coords_mtx))
adj[1:5, 1:5]
colnames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj) = x@spatial_meta[[i]][['libname']]
adj[1:5, 1:5]
max(adj)
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
adj = as.matrix(dist(coords_mtx))
adj = adj/max(adj)
diag(adj) = NA
adj[1:5, 1:5]
max(adj)
max(adj, na.rm = T)
min(adj, na.rm = T)
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
adj = as.matrix(dist(coords_mtx))
adj = adj/max(adj)
diag(adj) = NA
colnames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj)
rownames(adj)[i]
neighbours = list()
for(i in 1:nrow(adj)){
neighbours[[i]] = 1:nrow(adj)[!(rownames(adj)[i] %in% rownames(adj))]
}
1:nrow(adj)
[!(rownames(adj)[i] %in% rownames(adj))]
!(rownames(adj)[i] %in% rownames(adj))
rownames(adj)[i]
neighbours = list()
for(i in 1:nrow(adj)){
neighbours[[i]] = 1:nrow(adj)[!(rownames(adj) %in% rownames(adj)[i])]
}
rownames(adj) %in% rownames(adj)[i]
sum(rownames(adj) %in% rownames(adj)[i])
1:nrow(adj)[!(rownames(adj) %in% rownames(adj)[i])]
idx = 1:nrow(adj)
idx
neighbours[[i]] = idx[!(rownames(adj) %in% rownames(adj)[i])]
neighbours[[i]]
neighbours = list()
for(i in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[i]] = idx[!(rownames(adj) %in% rownames(adj)[i])]
}
View(neighbours)
i
neighbours = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = idx[!(rownames(adj) %in% rownames(adj)[id])]
}
neighbours
View(tnbc_2)
identical(neighbours, tnbc_2@misc$sthet$listws$sample_117d$neighbours)
View(tnbc_2@misc$sthet$listws$sample_117d$neighbours)
View(neighbours)
class(tnbc_2@misc$sthet$listws$sample_117d$neighbours)
class(neighbours) = 'nb'
identical(neighbours, tnbc_2@misc$sthet$listws$sample_117d$neighbours)
class(tnbc_2@misc$sthet$listws$sample_117d$neighbours[[1]])
neighbours = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = list(idx[!(rownames(adj) %in% rownames(adj)[id])])
}
class(neighbours) = 'nb'
neighbours = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = idx[!(rownames(adj) %in% rownames(adj)[id])]
names(neighbours[[id]]) = idx[!(rownames(adj) %in% rownames(adj)[id])]
}
class(neighbours) = 'nb'
identical(neighbours, tnbc_2@misc$sthet$listws$sample_117d$neighbours)
identical(neighbours, tnbc_2@misc$sthet$listws$sample_117d$neighbours)
View(tnbc_2@misc$sthet$listws$sample_117d$neighbours)
attr(tnbc_2@misc$sthet$listws$sample_117d$neighbours)
class(tnbc_2@misc$sthet$listws$sample_117d$neighbours)
class(neighbours)
weights = list()
class(tnbc_2@misc$sthet$listws$sample_117d$neighbours[[1]])
class(neighbours[[1]])
adj[id, ]
as.vector(adj[id, ])
class(tnbc_2@misc$sthet$listws$sample_117d$weights)
class(tnbc_2@misc$sthet$listws$sample_117d)
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
i
i=1
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
adj = as.matrix(stats::dist(coords_mtx))
adj = adj/max(adj)
diag(adj) = NA
colnames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj) = x@spatial_meta[[i]][['libname']]
neighbours = list()
weights = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = idx[!(rownames(adj) %in% rownames(adj)[id])]
names(neighbours[[id]]) = idx[!(rownames(adj) %in% rownames(adj)[id])]
weights[[i]] = as.vector(adj[id, ])
}
class(neighbours) = 'nb'
subj_listw = list(style='B',
neighbours=neighbours,
weights=weights)
class(subj_listw) = c("listw", "nb")
View(subj_listw)
View(tnbc_2@misc$sthet$listws$sample_117d)
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
adj = as.matrix(stats::dist(coords_mtx))
adj = adj/max(adj)
diag(adj) = NA
colnames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj) = x@spatial_meta[[i]][['libname']]
neighbours = list()
weights = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = idx[!(rownames(adj) %in% rownames(adj)[id])]
names(neighbours[[id]]) = idx[!(rownames(adj) %in% rownames(adj)[id])]
weights[[id]] = as.vector(adj[id, ])
}
class(neighbours) = 'nb'
subj_listw = list(style='B',
neighbours=neighbours,
weights=weights)
class(subj_listw) = c("listw", "nb")
View(tnbc_2@misc$sthet$listws$sample_117d)
View(subj_listw)
coords_mtx = as.matrix(x@spatial_meta[[i]][, c('libname', 'ypos', 'xpos')] %>% tibble::column_to_rownames('libname'))
adj = as.matrix(stats::dist(coords_mtx))
adj = adj/max(adj)
diag(adj) = NA
colnames(adj) = x@spatial_meta[[i]][['libname']]
rownames(adj) = x@spatial_meta[[i]][['libname']]
neighbours = list()
weights = list()
for(id in 1:nrow(adj)){
idx = 1:nrow(adj)
neighbours[[id]] = idx[!(rownames(adj) %in% rownames(adj)[id])]
names(neighbours[[id]]) = idx[!(rownames(adj) %in% rownames(adj)[id])]
weights[[id]] = as.vector(adj[id, ])
weights[[id]] = weights[[id]][!(rownames(adj) %in% rownames(adj)[id])]
}
class(neighbours) = 'nb'
subj_listw = list(style='B',
neighbours=neighbours,
weights=weights)
class(subj_listw) = c("listw", "nb")
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet_2(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
get_gene_meta(tnbc_1, sthet_only=T)
tnbc_2 <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
get_gene_meta(tnbc_2, sthet_only=T)
plot(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1])
tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]
plot(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1])
x1=tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]
x2=tnbc_2@misc$sthet$listws$sample_117d$weights[[1]
plot(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(log(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(log2(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(log10(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(sqrt(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(exp(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(sqrt(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(logb(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(log2(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]]), tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(1/tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
plot(1/tnbc_1@misc$sthet$listws$sample_117d$weights[[1]], tnbc_2@misc$sthet$listws$sample_117d$weights[[1]])
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc <- transform_data(tnbc, method='log')
tnbc_1 <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
tnbc_2 <- SThet_2(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
get_gene_meta(tnbc_1, sthet_only=T)
get_gene_meta(tnbc_2, sthet_only=T)
View(tnbc_2)
View(tnbc_1)
tnbc_1@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]]
tnbc_1@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]][[1]]
min(tnbc_1@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]][[1]])
max(tnbc_1@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]][[1]])
max(tnbc_2@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]][[1]])
max(tnbc_1@misc[["sthet"]][["listws"]][["sample_117d"]][["weights"]][[1]])
