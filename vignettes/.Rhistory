sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12,stripe_index = 1)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12,stripe_index = c(1, 4))
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12,stripe_index = c(1, 3))
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12, wraptable_width = 20)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`') %>%
kableExtra::kable_styling(font_size = 12, wraptable_width = 10)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'pipe')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'html')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'latex')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'latex')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'html')
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Spatial heterogeneity statitstics in `spatialGE`', format = 'html')
View(cell_krige)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Heterogeneity statitstics in `spatialGE`', format = 'html')
View(plot_gene_krige)
View(plot_gene_quilt)
View(plot_gene_krige)
melanoma@gene_krige[['CAPG']][[1]]
melanoma@gene_krige[['CAPG']][[1]][['ord']]
melanoma@gene_krige[['CAPG']][[1]][['ord']]
melanoma@gene_krige[['CAPG']][[1]][['ord']]$predict)åunlist()
unlist(melanoma@gene_krige[['CAPG']][[1]][['ord']]$predict)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1)
x=melanoma
genes=c('CAPG', 'SOX10')
krige_type='ord'
plot_who=1
color_pal='YlOrBr
purity=F, saveplot=F, scaled=F
purity=F
saveplot=F
scaled=F
# Test that a gene name was entered.
if (is.null(genes)) {
stop("Please, enter one or more genes to plot.")
}
# Test if no specific subject plot was requested.
if (is.null(plot_who)) {
plot_who <- c(1:length(x@counts))
}
# Store maximum expression value in case 'scaled' is required.
if(scaled){
maxvalue <- c()
for (i in plot_who) {
for (gene in genes) {
# Test if kriging exists for a gene and subject.
if (exists(x@gene_krige[[gene]][[i]][[krige_type]])) {
if(!rlang::is_empty(x@gene_krige[[gene]][[i]][[krige_type]]) | !is.null(x@gene_krige[[gene]][[i]][[krige_type]])){
# Find maximum expression value for each spatial array.
values <- x@gene_krige[[gene]][[i]][[krige_type]]$predict
maxvalue <- append(maxvalue, max(values))
}
}
}
# Find maximum value among selected spatial arrays.
maxvalue <- max(maxvalue)
}
}
maxvalue
i=1
# Create list of plots for a given subject.
kp_list <- list()
gene=genes[1]
if(length(x@gene_krige[[gene]]) >= i){
if(is.null(x@gene_krige[[gene]][[i]])){
cat(paste0(gene, " kriging for subject ", i, " is not present in STList\n"))
next
}
}else{
cat(paste0(gene, " kriging for subject ", i, " is not present in STList\n"))
next
}
# Find prediction grid.
if(krige_type == 'univ'){
predict_grid <- x@gene_krige[[gene]][[i]]$univ_grid
}else if(krige_type == 'ord'){
predict_grid <- x@gene_krige[[gene]][[i]]$ord_grid
}
# Create data frame with coordinates and kriging values.
if(scaled){
krige_vals <- (x@gene_krige[[gene]][[i]][[krige_type]]$predict)/maxvalue
} else{
krige_vals <- x@gene_krige[[gene]][[i]][[krige_type]]$predict
}
df <- dplyr::bind_cols(predict_grid, krige=krige_vals)
names(df) <- c("x_pos", "y_pos", "krige")
# Get coordinates of bounding box enclosing the predicted grid.
bbox<-rbind(
c(min(predict_grid$Var1)-1, max(predict_grid$Var2)+1),
c(max(predict_grid$Var1)+1, max(predict_grid$Var2)+1),
c(max(predict_grid$Var1)+1, min(predict_grid$Var2)-1),
c(min(predict_grid$Var1)-1, min(predict_grid$Var2)-1)
)
bbox <- as.data.frame(bbox)
names(bbox) <- c("V1", "V2")
# Create SpatialPolygon object with the bounding box.
bbox_sp <- sp::SpatialPolygons(
list(sp::Polygons(list(sp::Polygon(bbox)), "id")))
# Create Spatial Polygon with the inner tissue border (concave hull)
mask_sp <- sp::SpatialPolygons(
list(sp::Polygons(list(sp::Polygon(x@prediction_border[[i]])), "id")))
# Substract the concave hull from the bounding box, yielding a SpatialPolygon
# object. The convert to
bbox_mask_diff <- raster::erase(bbox_sp, mask_sp)
# Get spatial statistics.
moran_est <- round(as.vector(x@gene_het[[gene]][[i]]$morans_I$estimate[[1]]), 2)
geary_est <- round(as.vector(x@gene_het[[gene]][[i]]$gearys_C$estimate[[1]]), 2)
getis_est <- round(as.vector(x@gene_het[[gene]][[i]]$getis_ord_Gi$estimate[[1]]), 4)
moran_p <- as.vector(x@gene_het[[gene]][[i]]$morans_I$p.value)
geary_p <- as.vector(x@gene_het[[gene]][[i]]$gearys_C$p.value)
getis_p <- as.vector(x@gene_het[[gene]][[i]]$getis_ord_Gi$p.value)
if(moran_p < 0.05){
moran_est <- paste0(moran_est, '*')
}
if(geary_p < 0.05){
geary_est <- paste0(geary_est, '*')
}
if(getis_p < 0.05){
getis_est <- paste0(getis_est, '*')
}
# Construct title.
if(krige_type == 'ord'){
titlekrige <- paste0(gene, ", subj ", i, " - ordinary kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
}
else if(krige_type == 'univ'){
titlekrige <- paste0(gene, ", subj ", i, " - universal kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
}
# Construct title.
if(krige_type == 'ord'){
titlekrige <- paste0(gene, ", subj ", i, " - ordinary kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
} else if(krige_type == 'univ'){
titlekrige <- paste0(gene, ", subj ", i, " - universal kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
}
if(purity){
tumorstroma_df <- dplyr::bind_cols(x@coords[[i]],
cluster=x@cell_deconv$ESTIMATE[[i]]$purity_clusters$cluster)
kp <- krige_p_purity(data_f=df, mask=bbox_mask_diff, color_pal=color_pal,
tumorstroma=tumorstroma_df,
leg_name="pred_expr", title_name=titlekrige)
} else{
kp <- krige_p(data_f=df, mask=bbox_mask_diff, color_pal=color_pal, leg_name="pred_expr",
title_name=titlekrige)
}
color_pal='YlOrBr'
# Construct title.
if(krige_type == 'ord'){
titlekrige <- paste0(gene, ", subj ", i, " - ordinary kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
} else if(krige_type == 'univ'){
titlekrige <- paste0(gene, ", subj ", i, " - universal kriging voom-norm counts\nMorans I=",
moran_est, "  Gearys C=", geary_est, "  GetisOrd Gi=",
getis_est)
}
if(purity){
tumorstroma_df <- dplyr::bind_cols(x@coords[[i]],
cluster=x@cell_deconv$ESTIMATE[[i]]$purity_clusters$cluster)
kp <- krige_p_purity(data_f=df, mask=bbox_mask_diff, color_pal=color_pal,
tumorstroma=tumorstroma_df,
leg_name="pred_expr", title_name=titlekrige)
} else{
kp <- krige_p(data_f=df, mask=bbox_mask_diff, color_pal=color_pal, leg_name="pred_expr",
title_name=titlekrige)
}
# Append plot to list.
kp_list[[gene]] <- kp
kp_list
View(quilt_p)
View(krige_p)
View(krige_p_purity)
View(krige_p_pvals)
View(quilt_p_purity2)
View(quilt_p_purity)
View(quilt_p)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=T)
View(plot_gene_krige)
exists(x@gene_krige[['CAPG']][[1]][['ord']])
x@gene_krige[['CAPG']][[1]][['ord']]
exists(x@gene_krige[['CAPG']][[1]][['ord']], where=x)
exists(x@gene_krige[['CAPG']][[1]][['ord']], where=x@gene_krige)
rlang::has_name(x, 'ord')
rlang::has_name(x@gene_krige, 'ord')
rlang::has_name(x@gene_krige[['CAPG']], 'ord')
rlang::has_name(x@gene_krige[['CAPG']][[1]], 'ord')
rlang::has_name(x@gene_krige[['CAPG']], '1')
rlang::has_name(x@gene_krige[['CAPG']], 1)
rlang::has_name(x@gene_krige[['CAPG']], 1L)
rlang::has_name(x@gene_krige[['CAPG']], '1L')
rlang::has_name(x@gene_krige[['CAPG']], '1')
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=T)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=3)
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 3))
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=3)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=3)
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 4))
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 4))
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Heterogeneity statitstics in `spatialGE`')
#```{r, fig.show="hold", out.width="50%"}
gridExtra::grid.arrange(
plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
, ncol=2)
#```{r, fig.show="hold", out.width="50%"}
plist <-
plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
gridExtra::grid.arrange(plist
, ncol=2)
#```{r, fig.show="hold", out.width="50%"}
plist <-
plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
gridExtra::marrangeGrob(plist
, ncol=2)
plist
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
plist<-plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
gridExtra::arrangeGrob(plist)
gridExtra::arrangeGrob(plist, ncol=2)
gridExtra::marrangeGrob(plist)
gridExtra::marrangeGrob(plist, nrow=1)
gridExtra::marrangeGrob(plist, nrow=1, ncol=2)
ggpubr::ggarrange(plist, nrow=1, ncol=2)
ggpubr::ggarrange(plotlist = plist, nrow=1, ncol=2)
#plots <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
#ggpubr::ggarrange(plotlist=plots, nrow=1, ncol=2)
plots
plots <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
plots
plots <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1, scaled=F)
ggpubr::ggarrange(plotlist=plots, nrow=1, ncol=2)
View(plot_gene_quilt)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
quilts <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(quilts, ncol=2)
quilts <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(quilts, nrow=1, ncol=2)
quilts <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts, nrow=1, ncol=2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
if("devtools" %in% rownames(installed.packages()) == FALSE) {
install.packages("devtools")
}
#devtools::install_github("fridleylab/spatialGEdev")
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
# count_files <- system.file("extdata", "fpaths_count_files.txt", package = "spatialGEdev")
# coord_files <- system.file("extdata", "fpaths_mapping_files.txt", package = "spatialGEdev")
# clin_file <- system.file("extdata", "thrane_clinical.csv", package = "spatialGEdev")
count_files <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/fpaths_count_files.txt"
coord_files <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/fpaths_mapping_files.txt"
clin_file <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/thrane_clinical.csv"
melanoma <- STList(countfiles = count_files,
coordfiles = coord_files,
clinical = clin_file
)
melanoma
bulk_pca(melanoma, clinvar='Gender')
melanoma <- voom_norm(melanoma)
quilts1 <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 3))
kriges1 <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1)
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Heterogeneity statitstics in `spatialGE`', format = 'html')
kriges2 <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=3)
ggpubr::ggarrange(plotlist=kriges2, nrow=1, ncol=2)
View(spatial_xcell)
View(spatial_deconv)
melanoma <- spatial_deconv(melanoma, method='xCell')
View(melanoma)
melanoma <- spatial_deconv(melanoma, method='xcell')
View(plot_gene_quilt)
View(voom_norm)
View(bulk_pca)
View(gene_krige)
View(plot_gene_quilt)
View(plot_gene_krige)
View(plot_gene_quilt)
View(plot_gene_quilt)
?kable
View(spatial_deconv)
View(spatial_purity)
View(cluster_purity)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
if("devtools" %in% rownames(installed.packages()) == FALSE) {
install.packages("devtools")
}
#devtools::install_github("fridleylab/spatialGEdev")
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
# count_files <- system.file("extdata", "fpaths_count_files.txt", package = "spatialGEdev")
# coord_files <- system.file("extdata", "fpaths_mapping_files.txt", package = "spatialGEdev")
# clin_file <- system.file("extdata", "thrane_clinical.csv", package = "spatialGEdev")
count_files <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/fpaths_count_files.txt"
coord_files <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/fpaths_mapping_files.txt"
clin_file <- "~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/inst/extdata/short_test_version_3subjs/thrane_clinical.csv"
melanoma <- STList(countfiles = count_files,
coordfiles = coord_files,
clinical = clin_file
)
melanoma
bulk_pca(melanoma, clinvar='Gender')
melanoma <- voom_norm(melanoma)
quilts1 <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 3))
View(gene_krige)
View(gene_geary_C)
View(gene_moran_I)
View(gene_getis_Gi)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
melanoma <- gene_krige(melanoma, genes=c('CAPG', 'SOX10'), who=c(1, 3))
kriges1 <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=1)
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2)
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering', '"Cold spots"'),
"Statistic"=c('Moran’s I', 'Geary’s C', 'Getis-Ord Gi'),
"High"=c('Clustering', 'Dispersion', '“Hot spots”')
)
knitr::kable(sphet_info, align='c', caption='Heterogeneity statitstics in `spatialGE`', format = 'html')
kriges2 <- plot_gene_krige(melanoma, genes=c('CAPG', 'SOX10'), plot_who=3)
ggpubr::ggarrange(plotlist=kriges2, nrow=1, ncol=2)
melanoma <- spatial_deconv(melanoma, method='xcell')
View(plot_cell_quilt)
View(plot_gene_quilt)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
View(plot_cell_quilt)
View(plot_gene_quilt)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
melanoma@cell_deconv$xCell[[1]]$sqrt_scores$cell_names
plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
quilts2 <- plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts2, nrow=1, ncol=2)
quilts2 <- plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1, scale=T)
ggpubr::ggarrange(plotlist=quilts2, nrow=1, ncol=2)
quilts2 <- plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1, purity=T)
ggpubr::ggarrange(plotlist=quilts2, nrow=1, ncol=2)
quilts1 <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1, purity = T)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
View(quilt_p)
View(quilt_p_purity)
View(quilt_p_purity2)
View(plot_gene_quilt)
View(plot_cell_quilt)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
quilts1 <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
quilts1 <- plot_gene_quilt(melanoma, genes=c('CAPG', 'SOX10'), color_pal="YlOrBr", plot_who=1, purity = T)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2)
quilts2 <- plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1, purity=T)
ggpubr::ggarrange(plotlist=quilts2, nrow=1, ncol=2)
# library(spatialGEdev)
fx_dir <- list.files(path="~/OneDrive - Moffitt Cancer Center/SPATIAL_TRANSCRIPTOMICS/code/spatialGEdev/R",
full.names=T)
fx_dir <- grep(".R$", fx_dir, value=T)
sapply(fx_dir, FUN=source)
quilts2 <- plot_cell_quilt(melanoma, cells=c('b_cells', 'ly_endothelial_cells'), color_pal="YlOrBr", plot_who=1, purity=T)
ggpubr::ggarrange(plotlist=quilts2, nrow=1, ncol=2)
