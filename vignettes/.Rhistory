kriges2 <- STplot_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples='ST_mel2_rep1',
visium=F)
ggpubr::ggarrange(plotlist=kriges2, nrow=1, ncol=2, common.legend=T, legend='bottom')
melanoma <- gene_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples=c('ST_mel1_rep2', 'ST_mel2_rep1'))
kriges1 <- STplot_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples='ST_mel1_rep2',
visium=F)
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
devtools::load_all()
melanoma <- gene_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples=c('ST_mel1_rep2', 'ST_mel2_rep1'))
kriges1 <- STplot_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples='ST_mel1_rep2',
visium=F)
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
kriges2 <- STplot_interpolation(melanoma,
genes=c('MS4A1', 'MLANA'),
samples='ST_mel2_rep1',
visium=F)
ggpubr::ggarrange(plotlist=kriges2, nrow=1, ncol=2, common.legend=T, legend='bottom')
melanoma <- STclust(melanoma,
ks='dtc',
ws=c(0, 0.025, 0.05, 0.2))
cluster_p <- STplot(melanoma,
samples='ST_mel1_rep2',
ws=c(0, 0.025, 0.05, 0.2),
visium=F,
ptsize=1)
ggpubr::ggarrange(plotlist=cluster_p, nrow=2, ncol=2, legend='right')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
visium_folders
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
visium_folders
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
data_files
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
data_files
clin_file
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
library('magrittr') # Use of pipe operator in this vignette
library('spatialGE')
#devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
detach("package:spatialGE", unload = TRUE)
remove.packages("spatialGE")
devtools::install_github("fridleylab/spatialGE@oospina_dev")
tnbc
remove.packages("spatialGE")
devtools::load_all('../')
devtools::load_all('../')
devtools::load_all('../')
tnbc
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
tnbc
devtools::load_all('../')
tnbc
devtools::load_all('../')
tnbc
dim(tnbc)
devtools::load_all('../')
dim(tnbc)
summarize_STlist(tnbc)
summarize_STlist(tnbc)
dim(tnbc)
devtools::load_all('../')
tnbc
tnbc = pseudobulk_samples(tnbc, max_var_genes=5000)
?spatialGE::summary
?spatialGE::summarize_STlist
?spatialGE::STlist
?summary
devtools::load_all('../')
library('magrittr') # Use of pipe operator in this vignette
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
tnbc = pseudobulk_samples(tnbc, max_var_genes=5000)
pseudobulk_pca_plot(tnbc, plot_meta='patient_id')
pseudobulk_heatmap(tnbc, plot_meta='patient_id', hm_display_genes=30)
tnbc <- transform_data(tnbc, method='log')
list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
STplot(melanoma, gene='MLANA', samples='ST_mel1_rep2')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- transform_data(melanoma)
STplot(melanoma, gene='MLANA', samples='ST_mel1_rep2')
quilts1 <- STplot(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c',
color_pal='BuRd',
ptsize=0.8)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2, legend='bottom')
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2, legend='bottom')
tnbc <- gene_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples=c('sample_094c', 'sample_117e'))
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- transform_data(melanoma)
melanoma <- gene_interpolation(melanoma, genes=c('MLANA', 'COL1A1'), samples='ST_mel1_rep2')
kp = STplot_interpolation(melanoma, genes=c('MLANA', 'COL1A1'))
ggpubr::ggarrange(plotlist=kp)
warnings()
kriges1 <- STplot_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c')
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
kriges1 <- STplot_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c')
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
kriges1 <- STplot_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c')
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
View(tnbc)
pcs = tnbc@misc[['pbulk_pca']]
pcs
pcs = colnames(tnbc@misc[['pbulk_pca']])
pcs
pcs = gsub(colnames(tnbc@misc[['pbulk_pca']]), 'PC', '')
pcs
colnames(tnbc@misc[['pbulk_pca']])
pcs = gsub('PC', '', colnames(tnbc@misc[['pbulk_pca']]))
pcs
pcs = as.integer(gsub('PC', '', colnames(tnbc@misc[['pbulk_pca']])))
pcs
devtools::load_all('../')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
cp = count_distribution(melanoma, data_type='raw')
cp
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
cp = count_distribution(melanoma, data_type='raw', plot_type=c('violin', 'box'))
cp$violin
cp$boxplot
ggpubr::ggarrange(plotlist=cp)
cp = count_distribution(tnbc, data_type='raw', plot_type='violin')
ggpubr::ggarrange(plotlist=cp)
tnbc = filter_data(tnbc, spot_minreads=500)
cp2 = count_distribution(tnbc, data_type='raw', plot_type='violin')
ggpubr::ggarrange(plotlist=cp2)
summarize_STlist(tnbc)
STplot(tnbc, samples = 1, plot_meta = 'total_counts')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = count_distribution(tnbc, data_type='raw', plot_type='violin')
ggpubr::ggarrange(plotlist=cp)
tnbc = filter_data(tnbc, spot_minreads=500, spot_mingenes=200)
cp2 = count_distribution(tnbc, data_type='raw', plot_type='violin')
ggpubr::ggarrange(plotlist=cp2)
x=tnbc
plot_meta='total_counts'
genes=NULL
samples=NULL
data_type='raw'
color_pal='okabeito'
plot_type='density'
ptsize=0.5
ptalpha=0.5
# Define samples to plot if NULL or numeric
if(is.null(samples)){
samples = names(x@counts)
} else if(is.numeric(samples)){
samples = names(x@counts)[samples]
}
samples
!is.null(plot_meta) & !is.null(genes)
!is.null(plot_meta)
meta
plot_meta
meta=plot_meta
# Subset samples if meta data not in all samples
samples_tmp = samples
df_tmp = tibble::tibble()
for(i in samples){
if(!(meta %in% colnames(x@spatial_meta[[i]]))){
cat(paste0('Sample ', i, ' does not contain ', meta, '.\n'))
samples_tmp = grep(paste0('^', i, '$'), samples_tmp, value=T, invert=T)
} else{
df_tmp = dplyr::bind_rows(df_tmp,
x@spatial_meta[[i]] %>%
dplyr::select(libname, meta) %>%
tibble::add_column(samplename=i))
}
}
libname
# Subset samples if meta data not in all samples
samples_tmp = samples
df_tmp = tibble::tibble()
for(i in samples){
if(!(meta %in% colnames(x@spatial_meta[[i]]))){
cat(paste0('Sample ', i, ' does not contain ', meta, '.\n'))
samples_tmp = grep(paste0('^', i, '$'), samples_tmp, value=T, invert=T)
} else{
df_tmp = dplyr::bind_rows(df_tmp,
x@spatial_meta[[i]] %>%
dplyr::select(libname, !!meta) %>%
tibble::add_column(samplename=i))
}
}
df_tmp
# Define color palette
meta_cols = color_parse(color_pal, n_cats=length(samples))
meta_cols
# Create plot
p_list[[meta]] = ggplot2::ggplot(df_tmp, ggplot2::aes(x=samplename, y=.data[[meta]], color=samplename))
p_list = list()
# Create plot
p_list[[meta]] = ggplot2::ggplot(df_tmp, ggplot2::aes(x=samplename, y=.data[[meta]], color=samplename))
unique(df_tmp$samplename)
# Define bandwidth
bandw = round(mean(unlist(lapply(unique(df_tmp$samplename), function(i){
bw = stats::bw.nrd0(df_tmp[[meta]][df_tmp$sample_name == i])
return(bw)
}))), 2)
df_tmp
df_tmp[['samplename']]
unique(df_tmp[['samplename']])
# Define bandwidth
bandw = round(mean(unlist(lapply(unique(df_tmp[['samplename']]), function(i){
bw = stats::bw.nrd0(df_tmp[[meta]][df_tmp[['samplename']] == i])
return(bw)
}))), 2)
bandw
p_list[[meta]] +
ggplot2::stat_density(color='gray30', alpha=cvalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
p_list[[meta]] +
ggplot2::stat_density(color='gray30', alpha=ptalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
ggplot2::ggplot(df_tmp, ggplot2::aes(x=.data[[meta]], fill=samplename))
ggplot2::stat_density(color='gray30', alpha=ptalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
ggplot2::ggplot(df_tmp, ggplot2::aes(x=.data[[meta]], fill=samplename)) +
ggplot2::stat_density(color='gray30', alpha=ptalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
ggplot2::ggplot(df_tmp, ggplot2::aes(x=samplename, y=.data[[meta]], color=samplename)) +
ggplot2::geom_boxplot(outlier.size=ptsize)
p_list[[meta]] = ggplot2::ggplot(df_tmp, ggplot2::aes(x=.data[[meta]], fill=samplename)) +
ggplot2::stat_density(color='gray30', alpha=ptalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
p_list[[meta]] +
ggplot2::xlab(NULL) +
ggplot2::scale_color_manual(values=meta_cols) +
ggplot2::theme(axis.text.x=ggplot2::element_text(angle=30, hjust=1),
panel.border=ggplot2::element_rect(fill=NA, color='black'),
legend.title=ggplot2::element_blank())
genes='TP53'
# Extract data slot
if(data_type == 'tr'){
expr_tmp = x@tr_counts
p_title = 'Normalized expression - '
ax_title = 'Normalized expression'
} else {
expr_tmp = x@counts
p_title = 'Raw expression - '
ax_title = 'Counts'
}
p_list = list()
# Subset samples if gene not in all samples
samples_tmp = samples
df_tmp = tibble::tibble()
for(i in samples){
if(!(gene %in% rownames(expr_tmp[[i]]))){
cat(paste0('Sample ', i, ' does not contain ', gene, '.\n'))
samples_tmp = grep(paste0('^', i, '$'), samples_tmp, value=T, invert=T)
} else{
df_tmp = dplyr::bind_rows(df_tmp,
tibble::tibble(libname=colnames(expr_tmp[[i]]),
geneexpr=expr_tmp[[i]][gene, ],
samplename=i))
}
}
gene=genes
# Subset samples if gene not in all samples
samples_tmp = samples
df_tmp = tibble::tibble()
for(i in samples){
if(!(gene %in% rownames(expr_tmp[[i]]))){
cat(paste0('Sample ', i, ' does not contain ', gene, '.\n'))
samples_tmp = grep(paste0('^', i, '$'), samples_tmp, value=T, invert=T)
} else{
df_tmp = dplyr::bind_rows(df_tmp,
tibble::tibble(libname=colnames(expr_tmp[[i]]),
geneexpr=expr_tmp[[i]][gene, ],
samplename=i))
}
}
df_tmp
bandw = round(mean(unlist(lapply(unique(df_tmp[['samplename']]), function(i){
bw = stats::bw.nrd0(df_tmp[['geneexpr']][df_tmp[['samplename']] == i])
return(bw)
}))), 2)
p_list[[meta]] = ggplot2::ggplot(df_tmp, ggplot2::aes(x=.data[['geneexpr']], fill=samplename)) +
ggplot2::stat_density(color='gray30', alpha=ptalpha, bw=bandw, position="identity") +
ggplot2::ylab(paste0('Density (Bandwidth=', bandw, ')'))
p_list[[meta]]
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = distribution_plots(tnbc, data_type='raw', plot_type='violin')
ggpubr::ggarrange(plotlist=cp)
cp = distribution_plots(tnbc, data_type='raw', plot_type='violin')
cp
distribution_plots(tnbc, data_type='raw', plot_type='violin')
distribution_plots(tnbc, data_type='raw', plot_type='violin', plot_meta = 'total_counts')
devtools::load_all('../')
devtools::load_all('../')
devtools::load_all('../')
devtools::load_all('../')
devtools::load_all('../')
distribution_plots(tnbc, data_type='raw', plot_type='violin')
distribution_plots(tnbc, data_type='raw', plot_type='violin', plot_meta = 'total_counts')
distribution_plots(tnbc, data_type='raw', plot_type='violin', genes='TP53')
distribution_plots(tnbc, data_type='raw', plot_type='violin', genes='TP53')
devtools::load_all('../')
distribution_plots(tnbc, data_type='raw', plot_type='violin', genes='TP53')
distribution_plots(tnbc, data_type='raw', plot_type='violin', genes=c('TP53', 'MYC'))
cp = distribution_plots(tnbc, data_type='raw', plot_type='violin')
cp = distribution_plots(tnbc, data_type='raw', plot_type='violin', plot_meta='total_counts')
cp
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
devtools::load_all('../')
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
tnbc = filter_data(tnbc, spot_minreads=500, spot_mingenes=200)
cp2 = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
cp2[['total_counts']]
devtools::load_all('../')
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
tnbc2 = filter_data(tnbc, spot_minreads=500, spot_mingenes=200)
tnbc@spatial_meta$sample_120e
tnbc2@spatial_meta$sample_120e
tnbc2 = filter_data(tnbc, spot_minreads=1000, spot_mingenes=200)
tnbc2@spatial_meta$sample_120e
tnbc2 = filter_data(tnbc, spot_minreads=1000, spot_mingenes=500)
tnbc@spatial_meta$sample_120e
tnbc2@spatial_meta$sample_120e
rm(tnbc2)
tnbc = filter_data(tnbc, spot_minreads=2000, spot_mingenes=500)
cp2 = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp2[['total_counts']]
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
tnbc = filter_data(tnbc, spot_minreads=5000, spot_mingenes=1000, spot_maxreads=15000)
cp2 = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp2[['total_counts']]
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
tnbc = filter_data(tnbc, spot_minreads=5000, spot_mingenes=1000, spot_maxreads=150000)
cp2 = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp2[['total_counts']]
tnbc = pseudobulk_samples(tnbc, max_var_genes=5000)
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- filter_data(melanoma, spot_minreads=5000)
STplot(melanoma, samples = 1, genes = 'MLANA')
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw')
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw')
View(melanoma)
is.null(melanoma@misc[['sp_images']][[i]])
is.null(melanoma@misc[['sp_images']][[1]])
image && !is.null(x@misc[['sp_images']][[i]])
image & !is.null(x@misc[['sp_images']][[i]])
image
image=F
image && !is.null(x@misc[['sp_images']][[i]])
devtools::load_all('../')
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw')
devtools::load_all('../')
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- filter_data(melanoma, spot_minreads=1000)
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw', ptsize = 2)
melanoma <- filter_data(melanoma, spot_minreads=2000)
STplot(melanoma, samples = 1, genes = 'MLANA', data_type = 'raw', ptsize = 2)
devtools::document()
get_gene_meta(tnbc, sthet_only = T)
visium_folders <- list.dirs('~/Desktop/tnbc_visium/', full.names=T, recursive=F)
data_files <- system.file("extdata/tnbc_bassiouni", package="spatialGE")
clin_file <- list.files(data_files, full.names=T, recursive=F, pattern='clinical')
tnbc <- STlist(rnacounts=visium_folders, samples=clin_file)
tnbc
summarize_STlist(tnbc)
cp = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp[['total_counts']]
tnbc = filter_data(tnbc, spot_minreads=5000, spot_mingenes=1000, spot_maxreads=150000)
cp2 = distribution_plots(tnbc, plot_type='violin', plot_meta='total_counts')
cp2[['total_counts']]
tnbc = pseudobulk_samples(tnbc, max_var_genes=5000)
pseudobulk_pca_plot(tnbc, plot_meta='patient_id')
pseudobulk_heatmap(tnbc, plot_meta='patient_id', hm_display_genes=30)
tnbc <- transform_data(tnbc, method='log')
quilts1 <- STplot(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c',
color_pal='BuRd',
ptsize=0.8)
ggpubr::ggarrange(plotlist=quilts1, nrow=1, ncol=2, legend='bottom')
tnbc <- gene_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples=c('sample_094c', 'sample_117e'))
kriges1 <- STplot_interpolation(tnbc,
genes=c('NDRG1', 'IGKC'),
samples='sample_094c')
ggpubr::ggarrange(plotlist=kriges1, nrow=1, ncol=2, common.legend=T, legend='bottom')
tnbc <- STclust(tnbc,
ks='dtc',
ws=c(0, 0.025, 0.05, 0.2))
cluster_p <- STplot(tnbc,
samples='sample_094c',
ws=c(0, 0.025, 0.05, 0.2),
color_pal='highcontrast')
ggpubr::ggarrange(plotlist=cluster_p, nrow=2, ncol=2, legend='right')
tnbc <- SThet(tnbc,
genes=c('NDRG1', 'IGKC'),
method='moran')
p = compare_SThet(tnbc,
samplemeta='overall_survival_days',
color_by='patient_id',
gene=c('NDRG1', 'IGKC'),
color_pal='discreterainbow')
p
sphet_info <- tibble::tibble("Low"=c('Dispersion', 'Clustering'),
"Statistic"=c('Moran’s I', 'Geary’s C'),
"High"=c('Clustering', 'Dispersion')
)
kableExtra::kbl(sphet_info, align='c', centering=T) %>%
kableExtra::kable_styling(position="center", full_width=F)
get_gene_meta(tnbc, sthet_only=T)
sessionInfo()
