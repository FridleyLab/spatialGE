% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STlist.R
\name{STlist}
\alias{STlist}
\title{STlist: Creation of STlist objects for spatial transcriptomics analysis}
\usage{
STlist(
  rnacounts = NULL,
  spotcoords = NULL,
  samples = NULL,
  gmx_pkc = NULL,
  gmx_slide_col = NULL,
  gmx_roi_col = NULL,
  gmx_y_col = NULL,
  gmx_x_col = NULL,
  gmx_meta_cols = NULL,
  cores = NULL
)
}
\arguments{
\item{rnacounts}{the count data which can be provided in one of these formats:
\itemize{
\item File paths to comma- or tab-delimited files containing raw gene counts, one file
for each spatial sample. The first column contains gene names and subsequent columns
contain the expression data for each cell/spot. Duplicate gene names will be
modified using \code{make.unique}. Requires \code{spotcoords} and \code{samples}
\item File paths to Visium output directories (one per spatial sample). The directory
should follow the structure resulting from \verb{spaceranger count}. The directory contains
the \code{.h5} and \code{spatial} sub-directory. If no \code{.h5} file is available, sparse
matrices (MEX) from \verb{spaceranger count}. In that case a second sub-directory
called \code{filtered_feature_bc_matrix} should contain contain the \code{barcodes.tsv.gz},
\code{features.tsv.gz}, and \code{matrix.mtx.gz} files. The \code{spatial} sub-directory minimally
contains the coordinates (\code{tissue_positions_list.csv}), and optionally the high
resolution PNG image and accompanying scaling factors (\code{scalefactors_json.json}).
Requires \code{samples}
\item A named list of data frames with raw gene counts (one data frame per spatial
sample). Requires \code{spotcoords}
\item File path to \code{.dcc} files from GeoMx output. Requires \code{samples}
}}

\item{spotcoords}{the cell/spot coordinates. Not required if inputs are Visium
space ranger outputs or GeoMx DCC files
\itemize{
\item File paths to comma- or tab-delimited files containing cell/spot coordinates, one
for each spatial sample. The files must contain three columns: cell/spot IDs, Y positions, and
X positions. The cell/spot IDs must match the column names for each cells/spots (columns) in
the gene count files
\item A named list of data frames with cell/spot coordinates. The list names must
match list names of the gene counts list
}}

\item{samples}{the sample names/IDs and (optionally) metadata associated with
each spatial sample. This file can also include files paths to gene counts and
cell/spot coordinate files, bypassing the need to specify \code{rnacounts} and \code{spotcoords}.
The following options are available for \code{samples}:
\itemize{
\item A vector with sample names, which will be used to partially match gene
counts and cell/spot coordinates file paths. A sample name must not match file
paths for two different samples
\item A path to a file containing a table with metadata. This file is a comma- or
tab-separated table with one sample per row and sample names/IDs in the first
column. Paths to gene counts and coordinate files can be placed in the second and
third columns respectively (while leaving the \code{rnacounts} and \code{spotcoords} arguments
empty). If Visium directories are provided, only the second column with paths to
\verb{spaceranger count} directories are expected. Subsequent columns can contain
variables associated with each spatial sample
Note: For GeoMx, the metadata file contains one row per ROI. This information is
automatically summarized to one row per tissue slice. This metadata file usually
also contains the X and Y positions, which can be identified via \code{gmx_y_col} and
\code{gmx_x_col} arguments
}}

\item{gmx_pkc}{the file path to the \code{.pkc} probe set file (for GeoMx input)}

\item{gmx_slide_col}{the name of the column in the metadata table containing
the slide names (for GeoMx input)}

\item{gmx_roi_col}{the name of the column in the metadata table containing the
ROI IDs, matching IDs in the DCC files (for GeoMx input)}

\item{gmx_y_col}{the name of the column in the metadata table containing the
Y positions (for GeoMx input)}

\item{gmx_x_col}{the name of the column in the metadata table containing the
X positions (for GeoMx input)}

\item{gmx_meta_cols}{a vector with column names in the metadata table containing
clinical data (for GeoMx input)}

\item{cores}{integer indicating the number of cores to use during parallelization.
If NULL, the function uses half of the available cores at a maximum. The parallelization
uses \code{parallel::mclapply} and works only in Unix systems.}
}
\value{
x an STlist object containing the counts and coordinates, and optionally
the sample metadata, which can be used for downstream analysis with \code{spatialGE}
}
\description{
Creates an STlist object from one or multiple spatial transcriptomic samples.
}
\details{
Objects of the S4 class STlist are the starting point of analyses in \strong{\code{spatialGE}}.
The STlist contains data from one or multiple samples (i.e., tissue slices), and
results from most \code{spatialGE}'s functions are stored within the object.
\itemize{
\item Raw gene counts and spatial coordinates. Gene count data have genes in rows and
sampling units (e.g., cells, spots, ROIs) in columns. Spatial coordinates have
sampling units in rows and three columns: sample unit IDs, Y position, and X position.
\item Visium outputs from \emph{space ranger}. The Visium directory should generally have
the file structure resulting from \verb{spaceranger count}, with either a count matrix
represented in MEX files or a h5 file. The directory should also contain a \code{spatial}
sub-directory, with the spatial coordinates (\code{tissue_positions_list.csv}), and
optionally the high resolution tissue image and scaling factor file \code{scalefactors_json.json}.
}
Optionally, the user can input a path to a file containing a table of sample-level
metadata (e.g., clinical outcomes, tissue type, age). This sample metadata file
should contain sample IDs in the first column partially matching the file names of
the count/coordinate file paths or Visium directories.

The function uses parallelization if run in a unix system. Windows users
will experience longer times depending on the number of samples.
}
\examples{
# Using included melanoma example (Thrane et al.)
library('spatialGE')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma
}
