% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_data.R
\name{transform_data}
\alias{transform_data}
\title{transform_data: Transformation of spatial transcriptomics data}
\usage{
transform_data(
  x = NULL,
  method = "log",
  scale_f = 10000,
  sct_n_regr_genes = 3000,
  sct_min_cells = 5
)
}
\arguments{
\item{x}{an STlist with raw count matrices.}

\item{method}{one of \code{log} or \code{sct}. If \code{log}, log-normalization is performed.
If \code{sct}, then the SCTransform method is applied by calling \code{sctransform::vst}}

\item{scale_f}{the scale factor used in logarithmic transformation}

\item{sct_n_regr_genes}{the number of genes to be used in the regression model
during SCTransform. The function \code{sctransform::vst} makes a random gene selection
based on this number}

\item{sct_min_cells}{The minimum number of spots/cells to be used in the regression
model fit by \code{sctransform::vst}}
}
\value{
x an updated STlist with transformed counts.
}
\description{
Applies data transformation methods to spatial transcriptomics
samples within an STlist
}
\details{
This function takes an STlist with raw counts and performs data transformation.
The user has the option to select between log transformation after library size
normalization (\code{method='log'}), or SCTransform (\code{method='sct'}). In the case of
logarithmic transformation, a scaling factor (10^4 by default) is applied. The
function uses parallelization using "forking" (not available in Windows OS).
Note that the method \code{sct} returns a matrix with less genes as filtering is
done for low expression genes.
}
\examples{
# Using included melanoma example (Thrane et al.)
library('spatialGE')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- transform_data(melanoma, method='log')

}
