% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STplot_interpolation.R
\name{STplot_interpolation}
\alias{STplot_interpolation}
\title{STplot_interpolation: Visualize gene expression surfaces}
\usage{
STplot_interpolation(
  x = NULL,
  genes = NULL,
  top_n = 10,
  samples = NULL,
  color_pal = "BuRd",
  image = F,
  visium = T
)
}
\arguments{
\item{x}{an STlist containing results from \code{gene_krige} for the genes selected.}

\item{genes}{a vector of gene names (one or several) to plot. If 'top', the 10
genes with highest standard deviation from each spatial sample are plotted.}

\item{top_n}{an integer indicating how many top genes to perform kriging. Default is 10.}

\item{samples}{a vector indicating the spatial samples to plot. If vector of numbers,
it follows the order of \code{names(x@counts)}. If NULL, the function plots all samples}

\item{color_pal}{a color scheme from \code{khroma} or \code{RColorBrewer}.}

\item{image}{logical, whether to print the image stored for the spatial arrays}

\item{visium}{whether or not to reverse axes for Visium slides}
}
\value{
a list of plots
}
\description{
Produces a gene expression surface from kriging interpolation of ST data.
}
\details{
This function produces a gene expression surface plot via kriging for one or several
genes and spatial samples
}
\examples{
# Using included melanoma example (Thrane et al.)
library('spatialGE')
data_files <- list.files(system.file("extdata", package="spatialGE"), recursive=T, full.names=T)
count_files <- grep("counts", data_files, value=T)
coord_files <- grep("mapping", data_files, value=T)
clin_file <- grep("thrane_clinical", data_files, value=T)
melanoma <- STlist(rnacounts=count_files, spotcoords=coord_files, samples=clin_file)
melanoma <- transform_data(melanoma)
melanoma <- gene_interpolation(melanoma, genes=c('MLANA', 'COL1A1'), samples='ST_mel1_rep2')
kp = STplot_interpolation(melanoma, genes=c('MLANA', 'COL1A1'))
ggpubr::ggarrange(plotlist=kp)

}
