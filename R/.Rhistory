# Put back gene names to matrix and store in object.
df = tibble::as_tibble(df) %>%
tibble::add_column(gene=rownames(x@counts[[i]]), .before=1)
system(sprintf('echo "%s"', crayon::yellow(paste0("Log-transforming sample ", i, "...."))))
df_tmp = as.matrix(x@counts[[i]])
# Calculate (spot/cell) library sizes.
libsizes = colSums(df_tmp)
# Check that there are not zero-count spot/cells
if(any(libsizes == 0)){
zero_size = as.vector(which(libsizes == 0))
df_tmp = df_tmp[, -zero_size]
system(sprintf('echo "%s"', crayon::red(paste0(length(zero_size), " spots/cells with zero counts will be remove from the STList for sample", i, "."))))
}
# Divide each count value by their respective column (spot) normalization factor.
df_tmp = sweep(df_tmp, 2, libsizes, '/')
# Then multiply by scaling factor
df_tmp = df_tmp * scale_f
# Apply log transformation to count data.
df_tmp = log1p(df_tmp)
test = x@counts[[1]]
dim(test)
test[, -c(1:2)]
dim(test)
dim(test[, -c(1:2)])
# Check that there are not zero-count spot/cells
zero_size = ''
zero_size
zero_size=NULL
dim(test[, -zero_size])
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
for(i in names(stlist_objs)){
stlist_objs[[i]] = spatialTransform(stlist_objs[[i]])
}
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_objs)
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
x=stlist_test
scale_f=10000
# Test if an STList has been input.
if(is.null(x) | !is(x, "STList")){
stop("The input must be a STList.")
}
# Detect usable cores
cores = count_cores(length(x@counts))
# Perform log-transformation on parallel if possible.
log_counts = parallel::mclapply(seq_along(x@counts), function(i){
# Show progress
system(sprintf('echo "%s"', crayon::yellow(paste0("Log-transforming sample ", i, "...."))))
df_tmp = as.matrix(x@counts[[i]])
# Calculate (spot/cell) library sizes.
libsizes = colSums(df_tmp)
# Check that there are not zero-count spot/cells
zero_size = ''
if(any(libsizes == 0)){
zero_size = as.vector(which(libsizes == 0))
df_tmp = df_tmp[, -zero_size]
system(sprintf('echo "%s"', crayon::red(paste0(length(zero_size), " spots/cells with zero counts will be remove from the STList for sample", i, "."))))
}
# Divide each count value by their respective column (spot) normalization factor.
df_tmp = sweep(df_tmp, 2, libsizes, '/')
# Then multiply by scaling factor
df_tmp = df_tmp * scale_f
# Apply log transformation to count data.
df_tmp = log1p(df_tmp)
# # Put back gene names to matrix and store in object.
# df = tibble::as_tibble(df) %>%
#   tibble::add_column(gene=rownames(x@counts[[i]]), .before=1)
result_list = list(counts=df_tmp, zero_size=zero_size)
return(result_list)
}, mc.cores=cores, mc.preschedule=F)
log_counts
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
log_counts[[1]]$x=stlist_test
x=stlist_test
scale_f=10000
# log-normalize counts and obtain spots/cells with zero counts
log_results = log_transf(x, scale_f=scale_f)
log_results$sample1_MB14_A$zero_size
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
x=stlist_test
scale_f=10000
# log-normalize counts and obtain spots/cells with zero counts
log_results = log_transf(x, scale_f=scale_f)
x@counts[[1]][, 2] = 0
View(x@counts[[1]])
View(as.matrix(x@counts[[1]]))
head(colSums(as.matrix(x@counts[[1]])))
# log-normalize counts and obtain spots/cells with zero counts
log_results = log_transf(x, scale_f=scale_f)
i
i=1
# Remove zero counts spots/cells if any
if(!is.null(log_results[[i]][['zero_size']])){
zero_size = log_results[[i]][['zero_size']]
x@counts[[i]] = x@counts[[i]][, -zero_size]
libnames = colnames(x@counts[[i]])
x@coords[[i]] = x@coords[[i]] %>%
filter(libname %in% libnames)
rm(zero_size, libnames) # Clean environment
}
head(x@coords)
# Remove zero counts spots/cells if any
if(!is.null(log_results[[i]][['zero_size']])){
zero_size = log_results[[i]][['zero_size']]
x@counts[[i]] = x@counts[[i]][, -zero_size]
libnames = colnames(x@counts[[i]])
x@coords[[i]] = x@coords[[i]] %>%
dplyr::filter(libname %in% libnames)
rm(zero_size, libnames) # Clean environment
}
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
stlist_test@counts[[1]][, c(2,7,29)] = 0
stlist_test@counts[[2]][, c(525, 1000)] = 0
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
x=stlist_test
scale_f=10000
# log-normalize counts and obtain spots/cells with zero counts
log_results = log_transf(x, scale_f=scale_f)
for(i in names(x@counts)){
# Remove zero counts spots/cells if any
if(!is.null(log_results[[i]][['zero_size']])){
zero_size = log_results[[i]][['zero_size']]
x@counts[[i]] = x@counts[[i]][, -zero_size]
libnames = colnames(x@counts[[i]])
x@coords[[i]] = x@coords[[i]] %>%
dplyr::filter(libname %in% libnames)
rm(zero_size, libnames) # Clean environment
}
x@tr_counts[[i]] = log_results[[i]][['counts']]
}
x@misc[['transform']] = 'log'
# Calculate gene-wise standard deviations in parallel if possible.
cores = 1
x@tr_counts[[1]][1:5, 1:5]
class(x@tr_counts[[1]])
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
stlist_test@counts[[1]][, c(2,7,29)] = 0
stlist_test@counts[[2]][, c(525, 1000)] = 0
x=stlist_test
scale_f=10000
# log-normalize counts and obtain spots/cells with zero counts
log_results = log_transf(x, scale_f=scale_f)
for(i in names(x@counts)){
# Remove zero counts spots/cells if any
if(!is.null(log_results[[i]][['zero_size']])){
zero_size = log_results[[i]][['zero_size']]
x@counts[[i]] = x@counts[[i]][, -zero_size]
libnames = colnames(x@counts[[i]])
x@coords[[i]] = x@coords[[i]] %>%
dplyr::filter(libname %in% libnames)
rm(zero_size, libnames) # Clean environment
}
x@tr_counts[[i]] = log_results[[i]][['counts']]
}
x@misc[['transform']] = 'log'
x@tr_counts[[1]][1:5, 1:5]
naniar::vis_miss(x@tr_counts[[1]])
class((x@tr_counts[[1]]))
any(x@tr_counts == 'NaN')
any(x@tr_counts[[1]] == 'NaN')
any(x@tr_counts[[2]] == 'NaN')
#gene_stdevs_df = apply(x@tr_counts[[i]], 1, sd, na.rm=T) # There shouldn't be any NAs in data transformed counts
gene_stdevs_df = apply(x@tr_counts[[i]], 1, sd)
head(gene_stdevs_df)
class(x@tr_counts[[i]])
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
View(stlist_test)
stlist_test@gene_var[["sample8_LMM_B3"]]
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
stlist_test@tr_counts
stlist_test@counts[[1]][]1:5, 1:5
stlist_test@counts[[1]][]1:5, 1:5]
stlist_test@counts[[1]][1:5, 1:5]
rowMeans(stlist_test@counts[[1]])
Matrix::rowMeans(stlist_test@counts[[1]])
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
stlist_test@counts[[1]][, c(250:253)] =
0
stlist_test@counts[[2]][, c(2, 528)] =
0
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
View(stlist_test)
stlist_test@gene_var[["sample1_MB14_A"]][["gene"]]
stlist_test@gene_var[["sample1_MB14_A"]]
stlist_test@gene_var[["sample1_MB14_A"]][["gene_sd"]]
View(stlist_test)
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
stlist_test@gene_var[["sample1_MB14_A"]][["gene"]]
stlist_test@gene_var[["sample1_MB14_A"]]
require('magrittr')
require('ggplot2')
source('../../spatialGE/R/plot_gene_quilt.R')
source('../../spatialGE/R/plot_helpers.R')
source('../..//spatialGE/R/classDefinitions.R')
source('../../spatialGE/R/detect_input.R')
source('../..//spatialGE/R/STList.R')
source('../../spatialGE/R/import_visium_h5.R')
source('../../spatialGE/R/import_visium.R')
source('../../spatialGE/R/import_geomx.R')
source('../../spatialGE/R/utils.R')
source('../../spatialGE/R/spatialTransform.R')
# STList object
fps = c('../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample1_MB14_A_ManualAlignmt/sample1_MB14_A_ManualAlignmt/outs/',
'../../visium_data_InnaSmalley/smalley_raw_visium_data/smalley_visium_second_run/smalley_visium_combined1_2_runs_sprangercount/sample8_LMM_B3_ManualAlignmt/sample8_LMM_B3_ManualAlignmt/outs')
stlist_test = STList(fps, samples=c('sample1_MB14_A', 'sample8_LMM_B3'))
rm(fps) # Clean environment
# Use spatialGE to normalize data
stlist_test = spatialTransform(stlist_test)
